{"version":3,"file":"static/js/81.424a930c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js","secvices/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"list\":\"Movies_list__hqYjd\",\"item\":\"Movies_item__Ba4aJ\",\"link\":\"Movies_link__MzAfU\",\"img\":\"Movies_img__8sw1H\",\"title\":\"Movies_title__MDLXB\",\"text\":\"Movies_text__FlKVm\"};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovies } from '../../secvices/API';\nimport { useLocation, useSearchParams, Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport placeHolder from '../../images/no-image.jpeg';\nimport s from './Movies.module.css';\n\nexport default function Movies() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [searchQuery, setSearchQuery] = useState(query ?? '');\n\n  useEffect(() => {\n    const searchMovies = async () => {\n      if (!query) {\n        return console.log('form is empty');\n      }\n      try {\n        setLoading(true);\n        const getSearchFilms = await getSearchMovies(query);\n        if (getSearchFilms.results.length > 0) {\n          return setItems(getSearchFilms.results);\n        } else {\n          return toast.error('We did not find any movies for you!');\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    searchMovies();\n  }, [query]);\n\n  function onChangeInput(e) {\n    setSearchQuery(e.currentTarget.value);\n  }\n\n  function handleSumbit(e) {\n    e.preventDefault();\n\n    setSearchParams({ query: searchQuery.toLowerCase().trim() });\n    if (query === '') {\n      return toast.warning('The form is empty');\n    }\n  }\n  return (\n    <>\n      <form action=\"\" onSubmit={handleSumbit} className={s.form}>\n        <input\n          onChange={onChangeInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"query\"\n          value={searchQuery}\n          className={s.input}\n        />\n        <button className={s.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {loading && <h3>Loading films....</h3>}\n\n      <ul className={s.list}>\n        {items.map(({ id, title, poster_path, name, original_title }) => (\n          <li key={id} className={s.item}>\n            <Link to={`${id}`} state={{ from: location }}>\n              <div>\n                <img\n                  className={s.img}\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : placeHolder\n                  }\n                  alt={name ?? original_title}\n                />\n              </div>\n              <p className={s.link}> {title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '01fc814c0e3e52f0814fb7a89299a296';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending() {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n\n  return response.data;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data;\n}\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data;\n}\n"],"names":["Movies","useState","items","setItems","loading","setLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","searchQuery","setSearchQuery","useEffect","searchMovies","console","log","getSearchMovies","getSearchFilms","results","length","toast","action","onSubmit","e","preventDefault","toLowerCase","trim","className","s","onChange","currentTarget","value","type","autoComplete","autoFocus","name","map","id","title","poster_path","original_title","to","state","from","src","placeHolder","alt","KEY","getTrending","axios","response","data","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}