{"version":3,"file":"static/js/489.e8f1d3b4.chunk.js","mappings":"sQACA,EAAuB,4BAAvB,EAA0D,4BAA1D,EAA6F,4B,SCK9E,SAASA,IAAiB,IAAD,IAC9BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,KAE1CC,EAAAA,EAAAA,YAAU,WAAM,8CACd,gGACER,GAAW,GADb,mBAGiCS,EAAAA,EAAAA,IAAgBf,GAHjD,OAGUgB,EAHV,OAIIZ,EAAQY,GACRR,EAAUQ,EAAeT,QAL7B,gDAOIU,QAAQC,IAAR,MAPJ,yBASIZ,GAAW,GATf,6EADc,uBAAC,WAAD,wBAada,KACC,CAACnB,IACJ,IAAQoB,EAAwDjB,EAAxDiB,eAAgBC,EAAwClB,EAAxCkB,aAAcC,EAA0BnB,EAA1BmB,SAAUC,EAAgBpB,EAAhBoB,YAChD,OACE,gCACGlB,IAAW,+CACZ,SAAC,KAAD,CAAMmB,GAAIb,EAAV,qBACCR,IACC,gCACE,gBAAKsB,UAAWC,EAAhB,UACE,gBACEC,IACEJ,EAAW,yCAC2BA,GAClCK,EAENC,IAAKT,OAGT,4BACE,8BAAMA,MACN,yCAAgC,GAAfC,EAAjB,OACClB,IACC,4BACE,oCACA,wBACGI,EAAOuB,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,aAKvB,4BACE,sCACA,6BAAKX,eAKb,gCACE,oDAEA,iBAAKG,UAAWC,EAAhB,WACE,SAAC,KAAD,CACEF,GAAE,OACFU,QAASlC,EACTY,MAAO,CAAEC,KAAMF,GACfc,UAAWC,EAJb,mBAQA,SAAC,KAAD,CAAMF,GAAE,UAAaU,QAASlC,EAASY,MAAO,CAAEC,KAAMF,GAAtD,4BAKJ,SAAC,EAAAwB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,W,iMClFFC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,0BAAO,yGACkBC,IAAAA,IAAA,qCAAwCF,IAD1D,cACCG,EADD,yBAGEA,EAASC,MAHX,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAA+BC,GAA/B,4FACkBJ,IAAAA,IAAA,+BACGF,EADH,kBACgBM,IAFlC,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAe1B,EAAtB,+CAAO,OAAP,0BAAO,WAA+Bf,GAA/B,4FACkBuC,IAAAA,IAAA,gBAAmBvC,EAAnB,oBAAsCqC,IADxD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,0BAAO,WAA+B5C,GAA/B,4FACkBuC,IAAAA,IAAA,gBAAmBvC,EAAnB,4BAA8CqC,IADhE,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAIA,SAAeI,EAAtB,+CAAO,OAAP,0BAAO,WAA+B7C,GAA/B,4FACkBuC,IAAAA,IAAA,iBAAoBvC,EAApB,4BAA+CqC,IADjE,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAxBPF,IAAAA,SAAAA,QAAyB,gC","sources":["webpack://goit-react-hw-05-movies/./src/pages/MoviesDetails/MoviesDetails.module.css?e2c8","pages/MoviesDetails/MoviesDetails.js","secvices/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesDetails_list__uTHrT\",\"foto\":\"MoviesDetails_foto__1ZOq5\",\"link\":\"MoviesDetails_link__yacK6\"};","import { useState, useEffect, Suspense } from 'react';\nimport { getMovieDetails } from '../../secvices/API';\nimport placeHolder from '../../images/no-image.jpeg';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport s from './MoviesDetails.module.css';\n\nexport default function MoviesDetails() {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchFilm() {\n      setLoading(true);\n      try {\n        const getFilmDetails = await getMovieDetails(movieId);\n        setFilm(getFilmDetails);\n        setGenres(getFilmDetails.genres);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchFilm();\n  }, [movieId]);\n  const { original_title, vote_average, overview, poster_path } = film;\n  return (\n    <>\n      {loading && <h3>Loading films....</h3>}\n      <Link to={backLink}>Go back</Link>\n      {film && (\n        <section>\n          <div className={s.foto}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : placeHolder\n              }\n              alt={original_title}\n            />\n          </div>\n          <div>\n            <h2> {original_title}</h2>\n            <p> User Score: {vote_average * 10}%</p>\n            {film && (\n              <div>\n                <h3>Genres</h3>\n                <ul>\n                  {genres.map(genre => (\n                    <li key={genre.id}>{genre.name}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            <div>\n              <h3>Overview</h3>\n              <p> {overview}</p>\n            </div>\n          </div>\n        </section>\n      )}\n      <section>\n        <h3>Additional information</h3>\n\n        <div className={s.list}>\n          <Link\n            to={`cast`}\n            movieid={movieId}\n            state={{ from: backLink }}\n            className={s.link}\n          >\n            Cast\n          </Link>\n          <Link to={`reviews`} movieid={movieId} state={{ from: backLink }}>\n            Reviews\n          </Link>\n        </div>\n      </section>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '01fc814c0e3e52f0814fb7a89299a296';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending() {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n\n  return response.data;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data;\n}\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data;\n}\n"],"names":["MoviesDetails","movieId","useParams","useState","film","setFilm","loading","setLoading","genres","setGenres","location","useLocation","backLink","state","from","useEffect","getMovieDetails","getFilmDetails","console","log","fetchFilm","original_title","vote_average","overview","poster_path","to","className","s","src","placeHolder","alt","map","genre","name","id","movieid","Suspense","fallback","KEY","getTrending","axios","response","data","getSearchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}